// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  password    String?
  firstName   String
  lastName    String
  otp         String?
  otpExpiry   DateTime?
  questions   Question[]
  papers      QuestionPaper[]
}

model Subject {
   id          Int      @id @default(autoincrement())
   title       String   @unique
   description String
   topics      Topic[]
}

model Topic {
   id          Int      @id @default(autoincrement())
   title       String   @unique
   description String
   subjectId   Int
   subject     Subject @relation(fields: [subjectId], references: [id])
   questions   QuestionTopic[]
   paperTopics QuestionPaperTopic[]
}

model QuestionTopic {
   id          Int  @id @default(autoincrement())
   topicId     Int
   topic       Topic @relation(fields: [topicId], references: [id])
   questionId  Int
   question    Question @relation(fields: [questionId], references: [id])
   @@unique([topicId, questionId])
}

enum QuestionLevel {
   Easy
   Medium
   Difficult
   Expert
}

model Question {
   id                Int   @id @default(autoincrement())
   text              String
   questionTopics    QuestionTopic[]
   options           Option[]
   userId            Int
   user              User @relation(fields: [userId], references: [id])
   randomize         Boolean @default(true)
   level             QuestionLevel @default(Easy)
   updatedAt         DateTime @updatedAt @default(now())
   createdAt         DateTime @default(now())
}

model Option {
   id          Int      @id @default(autoincrement())
   text        String
   questionId  Int
   question    Question @relation(fields: [questionId], references: [id])
   isCorrect   Boolean
}

model QuestionPaper {
   id          Int      @id @default(autoincrement())
   userId      Int
   user        User @relation(fields: [userId], references: [id])
   title       String
   updatedAt   DateTime @updatedAt @default(now())
   createdAt   DateTime @default(now())
   duration    Int @default(60)
   paperTopics QuestionPaperTopic[]
}

model QuestionPaperTopic {
   id          Int      @id @default(autoincrement())
   paperId     Int
   paper       QuestionPaper @relation(fields: [paperId], references: [id])
   topicId     Int
   topic       Topic @relation(fields: [topicId], references: [id])
   level       QuestionLevel
   numberOfQuestions Int
}
   
